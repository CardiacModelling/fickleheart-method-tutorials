[[model]]
name: tnnp-2004
author: Chon Lok Lei
desc: """
    A mixed current model using the tnnp-2004.mmt as the base.
    Swapped current:
    - ito: fink-2008.mmt
    - ikr: fink-2008.mmt (ion channel tutorial model-C.mmt)
    - iks: ohara-2011.mmt
    - ik1: ohara-2011.mmt
    """
# Initial values
membrane.V                                          = -86.2
rapid_time_dependent_potassium_current.Ir5          = 0
rapid_time_dependent_potassium_current.Or4          = 0
rapid_time_dependent_potassium_current.Cr1          = 0
rapid_time_dependent_potassium_current.Cr2          = 0
rapid_time_dependent_potassium_current.Cr3          = 1
slow_time_dependent_potassium_current.x1            = 0
slow_time_dependent_potassium_current.x2            = 0
inward_rectifier_potassium_current.x                = 1
fast_sodium_current_m_gate.m                        = 0
fast_sodium_current_h_gate.h                        = 0.75
fast_sodium_current_j_gate.j                        = 0.75
L_type_Ca_current_d_gate.d                          = 0
L_type_Ca_current_f_gate.f                          = 1
L_type_Ca_current_fCa_gate.fCa                      = 1
transient_outward_current.s                         = 1
transient_outward_current.r                         = 0
calcium_dynamics.g                                  = 1
calcium_dynamics.Ca_i                               = 0.0002
calcium_dynamics.Ca_SR                              = 0.2
sodium_dynamics.Na_i                                = 11.6
potassium_dynamics.K_i                              = 138.3

[L_type_Ca_current]
g_CaL = 0.000175
    in [L/F/ms (0.001)]
i_CaL = g_CaL * L_type_Ca_current_d_gate.d * L_type_Ca_current_f_gate.f * L_type_Ca_current_fCa_gate.fCa * 4 * membrane.V * membrane.F ^ 2 / (membrane.R * membrane.T) * (calcium_dynamics.Ca_i * exp(2 * membrane.V * membrane.F / (membrane.R * membrane.T)) - 0.341 * calcium_dynamics.Ca_o) / (exp(2 * membrane.V * membrane.F / (membrane.R * membrane.T)) - 1)
    in [A/F]

[L_type_Ca_current_d_gate]
alpha_d = 1.4 / (1 + exp((-35 [mV] - membrane.V) / 13 [mV])) + 0.25
    in [1]
beta_d = 1.4 / (1 + exp((membrane.V + 5 [mV]) / 5 [mV]))
    in [1]
dot(d) = (d_inf - d) / tau_d
    in [1]
d_inf = 1 / (1 + exp((-5 [mV] - membrane.V) / 7.5 [mV]))
    in [1]
gamma_d = 1 [ms] / (1 + exp((50 [mV] - membrane.V) / 20 [mV]))
    in [ms]
tau_d = 1 [ms] * alpha_d * beta_d + gamma_d
    in [ms]

[L_type_Ca_current_fCa_gate]
alpha_fCa = 1 / (1 + (calcium_dynamics.Ca_i / 0.000325 [mM]) ^ 8)
    in [1]
beta_fCa = 0.1 / (1 + exp((calcium_dynamics.Ca_i - 0.0005 [mM]) / 0.0001 [mM]))
    in [1]
d_fCa = (fCa_inf - fCa) / tau_fCa
    in [mS/uF]
dot(fCa) = piecewise(fCa_inf > fCa and membrane.V > -60 [mV], 0 [mS/uF], d_fCa)
    in [1]
fCa_inf = (alpha_fCa + beta_fCa + gama_fCa + 0.23) / 1.46
    in [1]
gama_fCa = 0.2 / (1 + exp((calcium_dynamics.Ca_i - 0.00075 [mM]) / 0.0008 [mM]))
    in [1]
tau_fCa = 2 [ms]
    in [ms]

[L_type_Ca_current_f_gate]
dot(f) = (f_inf - f) / tau_f
    in [1]
f_inf = 1 / (1 + exp((membrane.V + 20 [mV]) / 7 [mV]))
    in [1]
tau_f = 1125 [ms] * exp(-(membrane.V + 27 [mV]) ^ 2 / 240 [mV^2]) + 80 [ms] + 165 [ms] / (1 + exp((25 [mV] - membrane.V) / 10 [mV]))
    in [ms]

[calcium_background_current]
g_bca = 0.000592
    in [mS/uF]
i_b_Ca = g_bca * (membrane.V - reversal_potentials.E_Ca)
    in [A/F]

[calcium_dynamics]
Buf_c = 0.15
    in [mM]
Buf_sr = 10
    in [mM]
dot(Ca_SR) = Ca_sr_bufsr * membrane.V_c / V_sr * (i_up - (i_rel + i_leak))
    in [mM]
dot(Ca_i) = Ca_i_bufc * (i_leak - i_up + i_rel - 1 [1 (1000000000)] * (L_type_Ca_current.i_CaL + calcium_background_current.i_b_Ca + calcium_pump_current.i_p_Ca - 2 * sodium_calcium_exchanger_current.i_NaCa) / (2 * 1 [1 (1000000000000000)] * membrane.V_c * membrane.F) * membrane.Cm)
    in [mM]
Ca_i_bufc = 1 / (1 + Buf_c * K_buf_c / (Ca_i + K_buf_c) ^ 2)
    in [1]
Ca_o = 2
    in [mM]
Ca_sr_bufsr = 1 / (1 + Buf_sr * K_buf_sr / (Ca_SR + K_buf_sr) ^ 2)
    in [1]
K_buf_c = 0.001
    in [mM]
K_buf_sr = 0.3
    in [mM]
K_up = 0.00025
    in [mM]
V_leak = 8e-5
    in [mS/uF]
V_sr = 0.001094
    in [um^3]
Vmax_up = 0.000425
    in [mM/ms]
a_rel = 0.016464
    in [mM/ms]
b_rel = 0.25
    in [mM]
c_rel = 0.008232
    in [mM/ms]
d_g = (g_inf - g) / tau_g
    in [mS/uF]
dot(g) = piecewise(g_inf > g and membrane.V > -60 [mV], 0 [mS/uF], d_g)
    in [1]
g_inf = piecewise(Ca_i < 0.00035 [mM], 1 / (1 + (Ca_i / 0.00035 [mM]) ^ 6), 1 / (1 + (Ca_i / 0.00035 [mM]) ^ 16))
    in [1]
i_leak = V_leak * (Ca_SR - Ca_i)
    in [mM/ms]
i_rel = (a_rel * Ca_SR ^ 2 / (b_rel ^ 2 + Ca_SR ^ 2) + c_rel) * L_type_Ca_current_d_gate.d * g
    in [mM/ms]
i_up = Vmax_up / (1 + K_up ^ 2 / Ca_i ^ 2)
    in [mM/ms]
tau_g = 2
    in [ms]

[calcium_pump_current]
K_pCa = 0.0005
    in [mM]
g_pCa = 0.825
    in [A/F]
i_p_Ca = g_pCa * calcium_dynamics.Ca_i / (calcium_dynamics.Ca_i + K_pCa)
    in [A/F]

[environment]
time = 0 bind time
    in [ms]
pace = 0 bind pace

[fast_sodium_current]
g_Na = 14.838
    in [mS/uF]
i_Na = g_Na * fast_sodium_current_m_gate.m ^ 3 * fast_sodium_current_h_gate.h * fast_sodium_current_j_gate.j * (membrane.V - reversal_potentials.E_Na)
    in [A/F]

[fast_sodium_current_h_gate]
alpha_h = piecewise(membrane.V < -40 [mV], 0.057 [mS/uF] * exp(-(membrane.V + 80 [mV]) / 6.8 [mV]), 0 [mS/uF])
    in [mS/uF]
beta_h = piecewise(membrane.V < -40 [mV], 2.7 [mS/uF] * exp(0.079 [1/mV] * membrane.V) + 310000 [mS/uF] * exp(0.3485 [1/mV] * membrane.V), 0.77 [mS/uF] / (0.13 * (1 + exp((membrane.V + 10.66 [mV]) / -11.1 [mV]))))
    in [mS/uF]
dot(h) = (h_inf - h) / tau_h
    in [1]
h_inf = 1 / (1 + exp((membrane.V + 71.55 [mV]) / 7.43 [mV])) ^ 2
    in [1]
tau_h = 1 / (alpha_h + beta_h)
    in [ms]

[fast_sodium_current_j_gate]
alpha_j = piecewise(membrane.V < -40 [mV], (-25428 [mS/uF] * exp(0.2444 [1/mV] * membrane.V) - 6.948e-6 [mS/uF] * exp(-0.04391 [1/mV] * membrane.V)) * (membrane.V + 37.78 [mV]) / 1 [mV] / (1 + exp(0.311 [1/mV] * (membrane.V + 79.23 [mV]))), 0 [mS/uF])
    in [mS/uF]
beta_j = piecewise(membrane.V < -40 [mV], 0.02424 [mS/uF] * exp(-0.01052 [1/mV] * membrane.V) / (1 + exp(-0.1378 [1/mV] * (membrane.V + 40.14 [mV]))), 0.6 [mS/uF] * exp(0.057 [1/mV] * membrane.V) / (1 + exp(-0.1 [1/mV] * (membrane.V + 32 [mV]))))
    in [mS/uF]
dot(j) = (j_inf - j) / tau_j
    in [1]
j_inf = 1 / (1 + exp((membrane.V + 71.55 [mV]) / 7.43 [mV])) ^ 2
    in [1]
tau_j = 1 / (alpha_j + beta_j)
    in [ms]

[fast_sodium_current_m_gate]
alpha_m = 1 / (1 + exp((-60 [mV] - membrane.V) / 5 [mV]))
    in [1]
beta_m = 0.1 / (1 + exp((membrane.V + 35 [mV]) / 5 [mV])) + 0.1 / (1 + exp((membrane.V - 50 [mV]) / 200 [mV]))
    in [1]
dot(m) = (m_inf - m) / tau_m
    in [1]
m_inf = 1 / (1 + exp((-56.86 [mV] - membrane.V) / 9.03 [mV])) ^ 2
    in [1]
tau_m = 1 [ms] * alpha_m * beta_m
    in [ms]

[inward_rectifier_potassium_current]
# adapted from ohara-2011.mmt
use membrane.V
sx = 1 / (1 + exp(-(V + 2.5538 * potassium_dynamics.K_o + 144.59) / (1.5692 * potassium_dynamics.K_o + 3.8115)))
    in [1]
tx = 122.2 / (exp((V + 127.2) / -20.36) + exp((V + 236.8) / 69.33))
    in [ms]
dot(x) = (sx - x) / tx
    in [1]
r = 1 / (1 + exp((V + 105.8 - 2.6 * potassium_dynamics.K_o) / 9.493))
    in [1]
g_K1 = 0.5
    in [mS/uF]
i_K1 = g_K1 * sqrt(potassium_dynamics.K_o) * r * x * (V - reversal_potentials.E_K)
    in [A/F]

[membrane]
Cm = 0.185
    in [uF]
F =  9.64853414999999950e4
    in [C/mmol]
R = 8314.472
    in [J/mol/K]
T = 310
    in [K]
dot(V) = -1 / 1 * (inward_rectifier_potassium_current.i_K1 + transient_outward_current.i_to + rapid_time_dependent_potassium_current.i_Kr + slow_time_dependent_potassium_current.i_Ks + L_type_Ca_current.i_CaL + sodium_potassium_pump_current.i_NaK + fast_sodium_current.i_Na + sodium_background_current.i_b_Na + sodium_calcium_exchanger_current.i_NaCa + calcium_background_current.i_b_Ca + potassium_pump_current.i_p_K + calcium_pump_current.i_p_Ca + i_Stim)
    in [mV]
V_c = 0.016404
    in [um^3]
i_Stim = environment.pace * stim_amplitude
    in [A/F]
#i_Stim = piecewise(environment.time - floor(environment.time / stim_period) * stim_period >= stim_start and environment.time - floor(environment.time / stim_period) * stim_period <= stim_start + stim_duration, -stim_amplitude, 0 [A/F])
#    in [A/F]
stim_amplitude = -52
    in [A/F]
#stim_duration = 1
#    in [ms]
#stim_period = 1000
#    in [ms]
#stim_start = 10
#    in [ms]

[potassium_dynamics]
dot(K_i) = -1 [1 (1000000000)] * (inward_rectifier_potassium_current.i_K1 + transient_outward_current.i_to + rapid_time_dependent_potassium_current.i_Kr + slow_time_dependent_potassium_current.i_Ks + potassium_pump_current.i_p_K + membrane.i_Stim - 2 * sodium_potassium_pump_current.i_NaK) / (1 [1 (1000000000000000)] * membrane.V_c * membrane.F) * membrane.Cm
    in [mM]
K_o = 5.4
    in [mM]

[potassium_pump_current]
g_pK = 0.0146
    in [mS/uF]
i_p_K = g_pK * (membrane.V - reversal_potentials.E_K) / (1 + exp((25 [mV] - membrane.V) / 5.98 [mV]))
    in [A/F]

[rapid_time_dependent_potassium_current]
# adapted from model-C.mmt (same as fink-2008.mmt)
use membrane.V
g_Kr = 0.025 [mS/uF]
i_Kr = g_Kr * (membrane.T / 35 - 55 / 7) * sqrt(potassium_dynamics.K_o / 5.4) * Or4 * (V - reversal_potentials.E_K)
    in [A/F]
# Markov model
T_Base = 310 [K]
alpha_xr1 = 1 * membrane.T / T_Base * exp(24.335 + T_Base / membrane.T * (0.0112 * V - 25.914))
alpha_xr2 = 1 * membrane.T / T_Base * exp(22.746 + T_Base / membrane.T * (0 * V - 25.914))
alpha_xr3 = 1 * membrane.T / T_Base * exp(22.098 + T_Base / membrane.T * (0.0365 * V - 25.914))
alpha_xr4 = 1 * membrane.T / T_Base * exp(30.016 + T_Base / membrane.T * (0.0223 * V - 30.888)) * (5.4 / potassium_dynamics.K_o) ^ 0.4
beta_xr1 = 1 * membrane.T / T_Base * exp(13.688 + T_Base / membrane.T * (-0.0603 * V - 15.707))
beta_xr2 = 1 * membrane.T / T_Base * exp(13.193 + T_Base / membrane.T * (0 * V - 15.707))
beta_xr3 = 1 * membrane.T / T_Base * exp(7.313 + T_Base / membrane.T * (-0.0399 * V - 15.707))
beta_xr4 = 1 * membrane.T / T_Base * exp(30.061 + T_Base / membrane.T * (-0.0312 * V - 33.243))
dot(Cr1) = beta_xr1 * Cr2 - alpha_xr1 * Cr1
dot(Cr2) = alpha_xr1 * Cr1 + beta_xr2 * Cr3 - (alpha_xr2 + beta_xr1) * Cr2
dot(Cr3) = alpha_xr2 * Cr2 + beta_xr3 * Or4 - (alpha_xr3 + beta_xr2) * Cr3
dot(Ir5) = alpha_xr4 * Or4 - beta_xr4 * Ir5
dot(Or4) = alpha_xr3 * Cr3 + beta_xr4 * Ir5 - (alpha_xr4 + beta_xr3) * Or4

[reversal_potentials]
E_Ca = 0.5 * membrane.R * membrane.T / membrane.F * log(calcium_dynamics.Ca_o / calcium_dynamics.Ca_i)
    in [mV]
E_K = membrane.R * membrane.T / membrane.F * log(potassium_dynamics.K_o / potassium_dynamics.K_i)
    in [mV]
E_Ks = membrane.R * membrane.T / membrane.F * log((potassium_dynamics.K_o + P_kna * sodium_dynamics.Na_o) / (potassium_dynamics.K_i + P_kna * sodium_dynamics.Na_i))
    in [mV]
E_Na = membrane.R * membrane.T / membrane.F * log(sodium_dynamics.Na_o / sodium_dynamics.Na_i)
    in [mV]
P_kna = 0.03
    in [1]

[slow_time_dependent_potassium_current]
# adapted from ohara-2011.mmt
use membrane.V
sx  = 1 / (1 + exp((V + 11.60) / -8.932))
    desc: Steady-state value for activation of IKs channels
tx1 = 817.3 + 1 / (2.326e-4 * exp((V + 48.28) / 17.80) + 0.001292 * exp((V + 210) / -230))
    desc: Time constant for slow, low voltage IKs activation
dot(x1) = (sx - x1) / tx1
    desc: Slow, low voltage IKs activation
tx2 = 1 / (0.01 * exp((V - 50) / 20) + 0.0193 * exp((V + 66.54) / -31))
    desc: Time constant for fast, high voltage IKs activation
dot(x2) = (sx - x2) / tx2
    desc: Fast, high voltage IKs activation
KsCa = 1 + 0.6 / (1.0 + (3.8e-5 / calcium_dynamics.Ca_i)^1.4)
g_Ks = 0.02
    desc: Maximum conductance for IKs
    in [mS/uF]
i_Ks = g_Ks * KsCa * x1 * x2 * (V - reversal_potentials.E_Ks)
    desc: Slow delayed rectifier Potassium current
    in [A/F]

[sodium_background_current]
g_bna = 0.00029
    in [mS/uF]
i_b_Na = g_bna * (membrane.V - reversal_potentials.E_Na)
    in [A/F]

[sodium_calcium_exchanger_current]
K_NaCa = 1000
    in [A/F]
K_sat = 0.1
    in [1]
Km_Ca = 1.38
    in [mM]
Km_Nai = 87.5
    in [mM]
alpha = 2.5
    in [1]
gamma = 0.35
    in [1]
i_NaCa = K_NaCa * (exp(gamma * membrane.V * membrane.F / (membrane.R * membrane.T)) * sodium_dynamics.Na_i ^ 3 * calcium_dynamics.Ca_o - exp((gamma - 1) * membrane.V * membrane.F / (membrane.R * membrane.T)) * sodium_dynamics.Na_o ^ 3 * calcium_dynamics.Ca_i * alpha) / ((Km_Nai ^ 3 + sodium_dynamics.Na_o ^ 3) * (Km_Ca + calcium_dynamics.Ca_o) * (1 + K_sat * exp((gamma - 1) * membrane.V * membrane.F / (membrane.R * membrane.T))))
    in [A/F]

[sodium_dynamics]
dot(Na_i) = -1 [1 (1000000000)] * (fast_sodium_current.i_Na + sodium_background_current.i_b_Na + 3 * sodium_potassium_pump_current.i_NaK + 3 * sodium_calcium_exchanger_current.i_NaCa) / (1 [1 (1000000000000000)] * membrane.V_c * membrane.F) * membrane.Cm
    in [mM]
Na_o = 140
    in [mM]

[sodium_potassium_pump_current]
K_mNa = 40
    in [mM]
K_mk = 1
    in [mM]
P_NaK = 1.362
    in [A/F]
i_NaK = P_NaK * potassium_dynamics.K_o / (potassium_dynamics.K_o + K_mk) * sodium_dynamics.Na_i / (sodium_dynamics.Na_i + K_mNa) / (1 + 0.1245 * exp(-0.1 * membrane.V * membrane.F / (membrane.R * membrane.T)) + 0.0353 * exp(-membrane.V * membrane.F / (membrane.R * membrane.T)))
    in [A/F]

[transient_outward_current]
# adapted from fink-2008.mmt
use membrane.V
i_to = g_to * r * s * (V - reversal_potentials.E_K)
    in [A/F]
g_to = 0.16
    in [mS/uF]
dot(r) = (r_inf - r) / tau_r
    r_inf = 1 / (1 + exp((20 - V) / 6))
    tau_r = 9.5 * exp(-(V + 40) ^ 2 / 1800) + 0.8
dot(s) = (s_inf - s) / tau_s
    s_inf = 1 / (1 + exp((V + 20) / 5))
    tau_s = 85 * exp(-(V + 45) ^ 2 / 320) + 5 / (1 + exp((V - 20) / 5)) + 3

[[protocol]]
# Level  Start    Length   Period   Multiplier
1.0      100.0    0.5      1000.0   0

[[script]]
import matplotlib.pyplot as plt
import myokit

# Get model and protocol, create simulation
m = get_model()
p = get_protocol()
s = myokit.Simulation(m, p)

# Run simulation
d = s.run(1000)

# Get the first state variable's name
first_state = next(m.states)
var = first_state.qname()

# Display the results
plt.figure()
plt.plot(d.time(), d[var])
plt.title(var)
plt.show()

